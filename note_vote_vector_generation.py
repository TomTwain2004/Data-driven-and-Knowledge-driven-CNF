import csv
from small_tools import read_csv, remove_head_tail_space
import numpy as np
from sklearn.metrics import confusion_matrix
# use 5 terms where add unsteady


def remove_xe_xa(input_text):
    # preprocess if I found some
    input_text = input_text.replace(' xdbterrible ', ' xdb terrible ')
    input_text = ' ' + input_text + ' '
    check_list = ['xef xbf xbds', 'xef xbf xbdt', 'xef xbf xbd', 'xc xbc', 'xc xbf', 'xc xbd', 'xc xaf',
                  'xc xa', 'xc xb', 'xe xa', ' xbds ', ' xbdt ', ' xef ', ' xbf ', ' xbd ', ' xbc ', ' xaf ',
                  ' xc ', ' xa ', ' xb ', ' xe ', ' xr ']
    for item in check_list:
        input_text = input_text.replace(item, ' ').replace('  ', ' ')
    input_text = input_text.replace('  ', ' ').replace('  ', ' ').replace('  ', ' ').replace('  ', ' ')
    input_text = remove_head_tail_space(input_text)
    return input_text


# old_root_path = r'D:\PycharmProjects\relation_extraction\old_sarcopenia_prediction_code/'
old_root_path = r'D:\PycharmProjects\sarcopenia_prediction/'

# load id who have notes
id_with_notes = []
data_path = old_root_path + '/data/sarc_notes_mark_terms_new_diagnosis/'
with open(data_path + 'sarc_notes_mark_terms_new_diagnosis_20230211_diff15_drop0.csv') as csvfile:
    spamreader = csv.reader(csvfile, delimiter=',')
    for i, row in enumerate(spamreader):
        if not row:
            continue
        if i == 0:
            print(row)  # ['patient_id', 'new_diagnosis_vector', 'mark_term_occurrence']
        else:
            # print(row[0],  row[2])
            patient_id = row[0]
            id_with_notes.append(patient_id)
print(len(id_with_notes))  # 698


# load id and label
id_label_dict = {}
with open(old_root_path + 'data/demographics.csv', newline='') as csvfile0:
    spamreader0 = csv.reader(csvfile0, delimiter=',')

    for i, row in enumerate(spamreader0):
        if i == 0:
            continue
            # print(row)  # ['STUDY_ID', 'DATEOFSTUDY', 'DOB', 'AGE', 'GENDER', 'RACE', 'ETHNICITY', 'HEIGHT', 'WEIGHT', 'BMI', 'PROSTHESIS', 'PROSTHESISPLEASESPECIFY', 'ORTHOSIS', 'ORTHOSIS_PLEASESPECIFY_', 'COMMENTS', 'BESTGRIPSTRENGTH', 'TIMEFOR5CHAIRSTANDS', 'NORLANDAPPENDICULARLEAN', 'USUALGAITSPEED', 'TOTALSPPBSCORE']
        elif i:
            # patient info
            id = row[0]  # read id
            age = float(row[3])
            gender = row[4]

            # disease or not (s1 s2 different)
            d = 0
            for j in range(5):
                d += int(row[-j - 1])  # if any one in the last 5 cols be 1ï¼Œ the label will be 1
            if d > 0:
                d = 1

            id_label_dict[id] = d
# ------------------------ find the extracted phrases ------------------------
print(id_label_dict.values())


# all 123 grams after literature filtering  # 20231116 'steady', 'cane', and 'muscle tenderness', "walker" # 20240108
# 'unsteady''
all_gram = """muscle tenderness,3,2
steady,4,2
unsteady,4,2
walker,3,3
cane,3,1"""

gram_fn_dict = {}
for line in all_gram.split('\n'):
    line = line.split(',')
    k = line[0]
    v = int(line[1])
    gram_fn_dict[k] = v

targets = []
for k, v in sorted(gram_fn_dict.items(), key=lambda x:x[1], reverse=True):
    print(k, v)
    if v >= 3:
        targets.append(k)
print(targets)


for thresh in [1]:# , 2, 3]:
    print('---------- thresh:', thresh)

    id_who_have_effective_notes = []
    phrases = read_csv(r'D:\PycharmProjects\relation_extraction\code_20230711_sarc_notes'
                       r'\comb_time_line_20230102_notes_only.csv')
    # print(type(phrases[0][1]), phrases[0][1])

    count_goal = 1
    score = 0

    true = []
    pred = []
    note_pred_dict = {}
    for p, patient in enumerate(phrases[:]):

        patient_id = patient[0]
        notes = patient[1]
        notes = notes.replace("{'", '').replace("]}", '')
        notes = notes.split("], '")

        id_who_have_effective_notes.append(patient_id)

        combined_notes = []
        for item in notes:
            item = item.split(": [")
            item = item[1]
            item = item.split(", ")
            item = [sub_item.replace("'", '') for sub_item in item]
            # print(item)
            combined_notes += item
        # print()
        # print(p, patient_id, combined_notes)  # 0-688
        if not combined_notes:
            continue
        goals = []
        for sarc_item in targets:
            for line in combined_notes:
                line = line.replace('  ', ' ').replace('  ', ' ').replace('  ', ' ').replace('  ', ' ')  # clean the text
                if not line:
                    continue
                line = remove_xe_xa(line)
                line = line.replace('  ', ' ').replace('  ', ' ').replace('  ', ' ').replace('  ', ' ')
                if not line:
                    continue
                if line.split()[0] in ['denied', 'plans', 'plan']:
                    continue
                filter_list = ['initially thought', 'impression plan',
                               'surgical risks include']  # #   possible, likely related
                filter_yes = 0
                for filter_item in filter_list:
                    if line.find(filter_item) != -1:
                        filter_yes += 1
                if filter_yes != 0:
                    continue

                if (' ' + line + ' ').lower().find(' ' + sarc_item + ' ') != -1 \
                        and sarc_item not in goals:
                    goals.append(sarc_item)

        local_diag = 0
        if len(goals) >= thresh:
            # print('label:', id_label_dict[patient_id], count_goal, patient_id, goals)
            count_goal += 1
            score += id_label_dict[patient_id]
            local_diag = 1

        true.append(id_label_dict[patient_id])
        pred.append(local_diag)
        note_pred_dict[patient_id] = local_diag

    # print('score:', score)

    completed_1304_pred = []
    completed_1304_true = []
    ids = []
    for id in id_label_dict.keys():
        ids.append(id)
        if id in note_pred_dict.keys():
            completed_1304_pred.append(note_pred_dict[id])
        else:
            completed_1304_pred.append(0)
        completed_1304_true.append(id_label_dict[id])

    print(completed_1304_true)
    print(completed_1304_pred)
    print(ids)

"""steady 4
unsteady 4
muscle tenderness 3
walker 3
cane 3
['steady', 'unsteady', 'muscle tenderness', 'walker', 'cane']
---------- thresh: 1
[0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0]
[0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
['19492', '20956', '25874', '40532', '41155', '43976', '54889', '58107', '60860', '64152', '66707', '66739', '72347', '79365', '80049', '82186', '84168', '87676', '96878', '110154', '110282', '118375', '121957', '133163', '134986', '137077', '141893', '143215', '151445', '152010', '152604', '154111', '158023', '162119', '173930', '175535', '177056', '181002', '183506', '184174', '186285', '188214', '190147', '194488', '194619', '197217', '207736', '212227', '215661', '217618', '220020', '223227', '224439', '232444', '233086', '233613', '233991', '236410', '238439', '240963', '241435', '244444', '247064', '247624', '250763', '255770', '263099', '264964', '265025', '266190', '270637', '276281', '280925', '292097', '293405', '304010', '305801', '308692', '310078', '315156', '317688', '329157', '332619', '338441', '343708', '347645', '350541', '351093', '356329', '360959', '362307', '366037', '370640', '370787', '374436', '376602', '378638', '382922', '385534', '386763', '387625', '393758', '393762', '396791', '405129', '413073', '416028', '416362', '416857', '419996', '420478', '420778', '422440', '425642', '429173', '430054', '431277', '432959', '436923', '437365', '439327', '448863', '449349', '450063', '456311', '456745', '459290', '466828', '467357', '474691', '480050', '506538', '507910', '568171', '588032', '620580', '649981', '673324', '677937', '684379', '687968', '693298', '693997', '699395', '700821', '711161', '714261', '720836', '720960', '724132', '727711', '728094', '728859', '729260', '731670', '732471', '735272', '736612', '738651', '741239', '745344', '749393', '754186', '755245', '755452', '756611', '758587', '758771', '761830', '763811', '770297', '774345', '774997', '775808', '777105', '778370', '780166', '785304', '788094', '788493', '791260', '794463', '797213', '799717', '800002', '804748', '805208', '810911', '816355', '825399', '833162', '833966', '840662', '861977', '864128', '868142', '871404', '878901', '884251', '890208', '899083', '903893', '904800', '915094', '918052', '918241', '919516', '924816', '929282', '932900', '949803', '955402', '957075', '959372', '966821', '971081', '988105', '989760', '993764', '995489', '997734', '998888', '1011224', '1014398', '1020641', '1032512', '1033285', '1039105', '1041488', '1041616', '1047563', '1052235', '1058753', '1060745', '1064228', '1099191', '1099207', '1099739', '1103587', '1104020', '1110201', '1110692', '1112316', '1112659', '1114484', '1114509', '1118441', '1121784', '1123849', '1132370', '1155798', '1167139', '1175981', '1189319', '1190373', '1192483', '1201682', '1203258', '1203611', '1213977', '1215060', '1220558', '1225866', '1239517', '1250924', '1253610', '1261879', '1264226', '1267021', '1268395', '1272668', '1278614', '1283712', '1284514', '1284946', '1292484', '1301646', '1302315', '1305551', '1310002', '1310221', '1312176', '1315061', '1316822', '1324829', '1336629', '1341532', '1345744', '1361175', '1361850', '1370614', '1371201', '1374726', '1375971', '1381959', '1383186', '1383948', '1388418', '1388439', '1393155', '1394415', '1397565', '1415363', '1481475', '1514295', '1539502', '1565081', '1626309', '3004468', '3007864', '3014464', '3015374', '3016950', '3019181', '3021578', '3028467', '3033290', '3042427', '3046689', '3046919', '3049971', '3053767', '3055188', '3064092', '3072068', '3072656', '3076250', '3077510', '3080317', '3082049', '3082445', '3087265', '3088160', '3091693', '3121150', '3123934', '3127350', '3132459', '3137237', '3137916', '3158141', '3159462', '3160472', '3161306', '3163999', '3165802', '3174393', '3178662', '3178752', '3183418', '3190411', '3191207', '3192644', '3197090', '3197764', '3208586', '3212045', '3213105', '3215517', '3216895', '3226217', '3251968', '3256673', '3260152', '3260426', '3263336', '3267555', '3267802', '3268059', '3272880', '3274680', '3276823', '3289219', '3292121', '3293091', '3293888', '3305788', '3315499', '3326876', '3329565', '3334665', '3335636', '3343973', '3346072', '3351315', '3353067', '3354709', '3359539', '3359881', '3361047', '3362671', '3362972', '3368241', '3372707', '3377382', '3378294', '3382772', '3384248', '3384406', '3385109', '3400980', '3404205', '3404877', '3406184', '3408886', '3415617', '3417731', '3419792', '3426713', '3429939', '3430065', '3430375', '3439096', '3449066', '3453121', '3461160', '3464077', '3464137', '3475031', '3475493', '3479186', '3479590', '3487357', '3487839', '3488164', '3492115', '3498438', '3502333', '3506471', '3515155', '3518392', '3519127', '3522122', '3524074', '3526070', '3526401', '3531843', '3532192', '3553665', '3557462', '3561162', '3562902', '3567362', '3570312', '3575853', '3577582', '3578244', '3578513', '3583634', '3585941', '3586040', '3589390', '3592728', '3593861', '3600466', '3603800', '3605102', '3605812', '3606625', '3610316', '3619989', '3620352', '3621288', '3622097', '3625810', '3626040', '3626458', '3630623', '3635317', '3635435', '3635543', '3636521', '3636799', '3637172', '3637522', '3641193', '3643678', '3652678', '3656314', '3658983', '3659221', '3660389', '3662640', '3664447', '3665586', '3665985', '3667074', '3670299', '3673912', '3675129', '3675454', '3678811', '3683251', '3683545', '3685377', '3691783', '3703222', '3714812', '3719251', '3721724', '3725282', '3725361', '3731536', '3735317', '3736010', '3739035', '3742601', '3744528', '3746788', '3751336', '3754439', '3765922', '3766765', '3767485', '3776204', '3777967', '3780657', '3784100', '3784226', '3785367', '3785553', '3796378', '3798901', '3816582', '3819766', '3822423', '3824891', '3825932', '3828392', '3835464', '3835660', '3840597', '3840751', '3840971', '3843629', '3849690', '3877074', '3888870', '3892165', '3903469', '3909791', '3912155', '3929493', '3938279', '3947070', '3971360', '4011433', '4018098', '4021898', '4026823', '4036144', '4037633', '4044173', '4065190', '4070229', '4074794', '4081886', '4092220', '4094088', '4095049', '4101963', '4102939', '4106044', '4116405', '4130541', '4144305', '4154797', '4159982', '4162121', '4188475', '4197496', '4201720', '4227769', '4228380', '4250039', '4277522', '4282807', '4294526', '4294793', '4323316', '4335278', '4337755', '4348069', '4352884', '4364786', '4371195', '4390677', '4391592', '4400512', '4402869', '4404640', '4413694', '4427226', '4435635', '4440952', '4455718', '4478667', '4576291', '4633417', '4655977', '4660119', '4772296', '4787614', '4793327', '4877444', '4891866', '4925206', '4941225', '4944316', '4958535', '4958666', '4989665', '4995424', '5002960', '5017821', '5027497', '5046717', '5069248', '5077650', '5080322', '5086509', '5091534', '5096144', '5105114', '5107574', '5125765', '5129496', '5133921', '5134974', '5139722', '5153176', '5170590', '5174313', '5176608', '5183400', '5184841', '5196677', '5199845', '5202905', '5208787', '5221452', '5222394', '5253619', '5255818', '5259426', '5264280', '5271892', '5280006', '5287479', '5299113', '5300022', '5300127', '5303864', '5305171', '5315426', '5319985', '5325093', '5326796', '5328931', '5331123', '5341926', '5343029', '5343636', '5358081', '5377166', '5379172', '5379409', '5391183', '5397396', '5405999', '5408981', '5428943', '5430406', '5431152', '5439561', '5451471', '5469698', '5472135', '5484987', '5506063', '5506237', '5508775', '5509981', '5519087', '5526480', '5527837', '5528892', '5541410', '5542088', '5543503', '5567813', '5578359', '5580119', '5591844', '5592598', '5608242', '5609995', '5611937', '5611987', '5614743', '5621063', '5638815', '5639086', '5642441', '5642877', '5646676', '5649788', '5653665', '5658425', '5658779', '5666328', '5677248', '5683493', '5685956', '5704984', '5718381', '5727744', '5728495', '5754405', '5757000', '5760519', '5765686', '5768350', '5771171', '5775233', '5790683', '5792220', '5801048', '5807702', '5814908', '5816654', '5844990', '5856266', '5856476', '5856654', '5871662', '5873096', '5877249', '5878148', '5880802', '5884320', '5885001', '5902163', '5902559', '5904899', '5905283', '5908438', '5908962', '5913834', '5917248', '5918191', '5923860', '5924347', '5956536', '5959460', '5966321', '6106216', '6111182', '6112900', '6130564', '6165982', '6176656', '6179544', '6181967', '6195426', '6208271', '6216167', '6229107', '6231807', '6310456', '6320762', '6357551', '6363113', '6363393', '6365340', '6370496', '6385042', '6419063', '6419411', '6437978', '6453573', '6504122', '6532745', '6544272', '6637961', '6676367', '6691296', '6691707', '6713600', '6713605', '6722558', '6771367', '6780539', '6781649', '6782159', '6809011', '6839492', '6857532', '6860764', '6862949', '6920064', '6951558', '6958094', '7020959', '7062239', '7071641', '7099277', '7110698', '7123777', '7128784', '7160915', '7164734', '7186218', '7189746', '7195996', '7202317', '7218317', '7311305', '7341746', '7358759', '7369178', '7369946', '7397887', '14010686', '14056042', '14136348', '14140589', '14154067', '14164228', '14187520', '14236043', '14239010', '14248963', '14307372', '14357204', '14363479', '14367083', '14378433', '14384320', '14394648', '14407223', '14408984', '14410550', '14416219', '14431529', '14448611', '14453925', '14461645', '14466505', '14476442', '14487496', '14500717', '14506653', '14519114', '14522468', '14530327', '14547645', '14548906', '14550932', '14553391', '14564441', '14568369', '14578384', '14582995', '14590043', '14593047', '14599405', '14609383', '14610525', '14618187', '14623314', '14625937', '14627732', '14631110', '14631765', '14638844', '14664031', '14667355', '14672246', '14672659', '14674377', '14685561', '14689151', '14693028', '14720947', '14733161', '14733172', '14755059', '14891465', '14893003', '14907204', '14937167', '15450372', '16019189', '16034037', '16040797', '16043706', '16046716', '16068423', '16091404', '16094892', '16103450', '16113319', '16123418', '16148808', '16150581', '16176730', '16202622', '16225454', '16231035', '16252424', '16280044', '16284929', '16293499', '16298167', '16321044', '16351474', '16355902', '16361124', '16366585', '16369718', '16373154', '16375494', '16392234', '16393111', '16399075', '16403016', '16419332', '16437564', '16437973', '16441692', '16459775', '16460796', '16466982', '16480050', '16484340', '16485748', '16495789', '16502878', '16511773', '16518849', '16527424', '16538677', '16555976', '16564721', '16579784', '16591790', '16593119', '16651649', '16653665', '16655096', '16697902', '16718242', '16745539', '16771561', '16777899', '16791128', '16798089', '16893343', '16912397', '16996341', '18047792', '18083917', '18087863', '18104102', '18124156', '18150188', '18199555', '18217511', '18219084', '18229832', '18230233', '18244056', '18246017', '18250499', '18252077', '18255406', '18257701', '18260424', '18263744', '18285777', '18290219', '18304121', '18307773', '18327863', '18354038', '18360597', '18371167', '18383538', '18387689', '18407574', '18447472', '18464628', '18518746', '18536547', '18602001', '18697090', '19017597', '19045883', '19048822', '19107660', '19188438', '20099860', '20192443', '20344185', '20886943', '21044427', '21054615', '21056925', '21057382', '21067840', '21128034', '21150466', '21174841', '21188695', '21202476', '21228723', '21238346', '21239807', '21308680', '21325588', '24014457', '24027506', '25023363', '25045831', '25818326', '25827829', '25898878', '26112587', '26119698', '26257546', '26353775', '26354323', '26380706', '26492566', '26772227', '26888703', '26997852', '27024036', '27138535', '27149393', '27291575', '27368741', '27449084', '27471248', '27760108', '28035944', '28091598', '28254860', '28291786', '28474780', '28511195', '28578734', '30030402', '32422227', '32424998', '33100433', '34012203', '34034055', '40044441', '40057127', '42136830', '42186316', '45241346', '46012595', '46013265', '46013841', '47087917', '50006618', '50259430', '63028651', '63030862', '63052950', '63179775', '63184375', '63422574', '63543076', '63791227', '64002170', '67909606', '67968794', '68022727', '68033767', '68042860', '68053088', '68064734', '68073515', '68086384', '68134105', '68223343', '68453283', '68511030', '68590203', '68647180', '68681149', '68704295', '68716051', '68721558', '68742717', '68746380', '68758671', '68826691', '68831759', '68853485', '68900563', '68919498', '68958423', '69063056', '69093467', '69124549', '69138943', '69150678', '69952427', '70078424', '70081415', '70116233', '70161571', '70194208', '70319222', '70321775', '70495188', '70512830', '70554949', '70586242', '70644594', '70669329', '71412935', '72103637', '72137083', '72143365', '72157698', '72163069', '72236615', '72305002', '72461050', '72488699', '72539074', '72708268', '72857955', '72888960', '72896837', '72969579', '73354789', '73403265', '73418327', '73474124', '73656025', '74086127', '74157623', '74362133', '74365749', '74406204', '74815840', '74897830', '74898233', '74997411', '75143234', '75362124', '75696838', '76291719', '76295174', '76632250', '76633136', '100064711', '100197795', '100265684', '100645274', '101195350', '101822827', '102338713', '103526287', '103957997', '104079662', '104468772', '104922906', '105022887', '105262640', '105387090', '105644378', '105811473', '106308448', '106546138', '106554478', '106555258', '106895191', '106905667', '107736636', '108262418', '108615515', '108689497', '109022078', '110518284', '111061440', '111639145', '111740157', '112840468', '113026481', '113106390', '113176209', '114322651', '114483360', '114884044', '116257437', '118042869', '118910827', '119432278', '119782844', '120610068', '123109746', '123145171', '123301247', '123305578', '125470405', '125800888', '125847727', '127867618', '128549265', '128590993', '128707094', '128841547', '130036148', '130352269', '130726912', '131068986', '131182625', '131810020', '131904306', '133034670', '135228069', '135989566', '142128142', '142819929', '151586735', '153142662', '154220188', '156056243', '160922943', '161725028', '166170651', '166269984', '166711368', '166967907', '167445322', '168667152', '173451170', '176677633', '176955351', '181395744', '181398035', '182507051', '182735184', '189064482', '190027248', '190069911', '190069931', '190259235', '190277468', '196038858', '198372169', '198468991', '199500237', '199628006', '200298870', '200755772', '205420993', '206476137', '206837109', '211155692', '214968270', '215225510', '215805012', '215979893', '217269941', '218798273', '221746032', '223464329', '228612266', '232727448', '237167968', '240292360', '242288733', '246042485', '247111429', '247226404', '248701244', '248774822', '250001304', '252513384', '255681278', '257447278', '261009779', '266533272', '270473154', '270898839', '272874703', '278372622', '279096080', '280100957', '284325017', '285854405', '286002457', '288993296', '301575470', '308250127']


"""
